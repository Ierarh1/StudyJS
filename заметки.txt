ВСЯ информация которую мы получаем от пользователя ВСЕГДА КАРЛ ВСЕГДА
БУДЕТ СТРОКОЙ.
const answer = prompt(`How old are you?`,``);
const answerDefault = prompt(`How old are you?`,`22`);
в обратку прийдут СТРОКИ, даже если пользователь ввёл число.Но можно принудительно
конвертировать в число поставив перед propt "+"
const answerDefault = +prompt(`How old are you?`,`22`);
тогда на выходе будет число


                                    				Интерполяция
//интерполяция. Для её использования необходимо пользоваться `` .
//По сути это удобное использование  переменных в других переменных
let category = `toys`;
console.log(`https://someurl./${category}/5`);//внесение переменных через $

//так же можно интерполировать и любые другие структуры
let user =`Anton`;
alert(`Hi everybody,${user}`);

								isNaN
 let numberOfFilms;

function start()
{   //проверяем на пустую строку, на null(пользователь отменяет действие)и проверяем на то что 
    //пользователь ввёл число для этого есть команда isNaN- если внутри НЕчисло то он вернёт правду
    while(numberOfFilms==``||numberOfFilms=null||isNaN(numberOfFilms))
    {
        numberOfFilms = +prompt(`Сколько фильмов вы просмотрели?`,``);
    }



								trim
//метод trim убирает пробелы вконце и в начале строки, таким образом мы  отфилтруем данные 
    //предоставил нам пользователь. Елси юхверь кинет нам просто кучу пробелом, то он обрежется
    //до пустой строки =``. А мы уже такое исключение отработали
        const a = prompt(`Один из последних просмотренных фильмов?`,``).trim(),
              b = prompt(`На сколько оцените его?`, ``);
        


							call-back function
//что бы фукции вызывались и выполнялись последовательно и существую callback_function
function learnJS(lang, callback)
{
    console.log(`я учу ${lang}`);
    callback();
}

function done()
{
    console.log(`я прошёл этот урок`);
}

learnJS(`JavaScript`,done);

							Деструктуризация объекта
Если по простому  деструктуризация это разбиени объекта на более мелкие. Если у объекта есть свои подобъекты тогда мы можем 
выдернуть его и использовать, не городя огромные формулы перебора элементов через for_in.

const option = {
    name: `test`,
    width: 2048,
    height: 1024,
    colors:{
        border: `black`,
        bg: `red`
    }
};

//мы вытащили их как отдельные переменные и мы можем с ними работать
console.log(border);
						Как узнать количество элементов в объекте
//как узнать количество элементов в объекте
console.log(Object.keys(option));//нам вернётся массив  содержащий тупо ключи.
//но у массива есть свойство length 
console.log(Object.keys(option).length);